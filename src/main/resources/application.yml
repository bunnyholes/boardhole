# ========================================
# Board-Hole 애플리케이션 공통 설정
# 모든 환경에서 공유되는 기본 설정
# ========================================

spring:
  # 애플리케이션 기본 정보
  application:
    name: boardhole
  
  # JPA 공통 설정
  jpa:
    hibernate:
      ddl-auto: update
  
  # Docker Compose 인프라 설정
  docker:
    compose:
      file: docker-compose.infra.yml
  
  # MVC 설정
  mvc:
    hiddenmethod:
      filter:
        enabled: true  # HTML 폼에서 PUT, DELETE 등의 HTTP 메서드 사용 가능

  # 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

# ========================================
# 서버 전역 인코딩 설정
# ========================================
server:
  shutdown: graceful  # Graceful Shutdown 활성화
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# ========================================
# 애플리케이션 도메인 설정
# ========================================
boardhole:
  # CORS 기본값 (환경별 프로필에서 오버라이드 권장)
  cors:
    path-patterns: "/api/**"
    allowed-origins: "http://localhost:8080,http://127.0.0.1:8080"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "Origin,Content-Type,Accept,Authorization,X-Requested-With"
    exposed-headers: # 의도적으로 비움
    allow-credentials: true
    max-age: 3600
  
  # 기본 사용자 템플릿 (비밀번호는 환경별 프로필에서 설정)
  default-users:
    admin:
      username: admin
      password: Admin123!  # 환경별로 오버라이드 권장 (정책 준수: 대/소문자+숫자+특수문자)
      name: 관리자
      email: admin@boardhole.com
  api:
    title: ${apiTitle}
    version: ${version}
    description: |
      ## Boardhole - Spring Boot Sample Code Repository

      Boardhole은 "구덩이(Hole)"라는 의미로, 다양한 Spring Boot 샘플 코드를 모아둔 코드 저장소입니다.
      실무에서 자주 사용되는 패턴과 기술들을 한곳에 모아 학습과 참고 목적으로 제공합니다.

      ### 주요 기능
      
      - **게시판 CRUD**: 게시글 작성, 수정, 삭제, 조회
      - **사용자 인증**: 세션 기반 로그인/로그아웃
      - **권한 관리**: 사용자/관리자 역할 구분
      - **UUID 기반**: 모든 엔티티 ID를 UUID로 통일하여 보안 강화

      ---

      이 API는 학습 목적의 샘플 코드입니다. 실무 프로젝트 구축 시 참고자료로 활용하세요.
    terms-of-service: ${apiTermsOfService}
    contact:
      name: ${contactName}
      email: ${contactEmail}
      url: ${githubUrl}
    license:
      name: ${apiLicenseName}
      url: ${apiLicenseUrl}

# ========================================
# Actuator 헬스체크
# ========================================
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      probes:
        enabled: true
